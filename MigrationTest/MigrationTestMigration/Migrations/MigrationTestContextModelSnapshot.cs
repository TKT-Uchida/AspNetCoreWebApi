// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationTestModel.Data;

namespace MigrationTestMigration.Migrations
{
    [DbContext(typeof(MigrationTestContext))]
    partial class MigrationTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MigrationTestModel.ModelUserMst", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("ModelUserMst");
                });

            modelBuilder.Entity("MigrationTestModel.ProductModelMst", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "ModelId");

                    b.ToTable("ProductModelMst");
                });

            modelBuilder.Entity("MigrationTestModel.ProductMst", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("ProductMst");
                });

            modelBuilder.Entity("MigrationTestModel.ProductMstChild", b =>
                {
                    b.Property<int>("AParenctProductId")
                        .HasColumnType("int");

                    b.Property<int>("ChildProductId")
                        .HasColumnType("int");

                    b.HasKey("AParenctProductId", "ChildProductId");

                    b.HasIndex("ChildProductId");

                    b.ToTable("ProductMstChild");
                });

            modelBuilder.Entity("MigrationTestModel.ModelUserMst", b =>
                {
                    b.HasOne("MigrationTestModel.ProductModelMst", "ProductModelMst")
                        .WithMany("ModelUserMsts")
                        .HasForeignKey("ModelId")
                        .HasPrincipalKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MigrationTestModel.ProductMstChild", b =>
                {
                    b.HasOne("MigrationTestModel.ProductMst", "ParentProductMst")
                        .WithMany("ProductMstParent")
                        .HasForeignKey("AParenctProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MigrationTestModel.ProductMst", "ChildProductMst")
                        .WithMany("ProductMstChild")
                        .HasForeignKey("ChildProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
