// <auto-generated />
using System;
using CarProductServiceModel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarProductServiceMigration.Migrations
{
    [DbContext(typeof(CarProductServiceContext))]
    [Migration("20200323172622_CarProductServiceMigration_001")]
    partial class CarProductServiceMigration_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarProductServiceModel.Models.CarMaker", b =>
                {
                    b.Property<int>("MakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnName("COUNTRY_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<string>("MakerName")
                        .HasColumnName("MAKER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MakerId");

                    b.ToTable("CAR_MAKER");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarMakerLang", b =>
                {
                    b.Property<string>("LangId")
                        .HasColumnName("LANG_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MakerId")
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<string>("MakerNameLang")
                        .HasColumnName("MAKER_NAME_LANG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LangId", "MakerId");

                    b.HasIndex("MakerId");

                    b.ToTable("CAR_MAKER_LANG");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.Property<int>("MakerId")
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<string>("ProductName")
                        .HasColumnName("PRODUCT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCode")
                        .HasColumnName("TYPE_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "MakerId");

                    b.HasIndex("MakerId");

                    b.ToTable("CAR_PRODUCT");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProductLang", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.Property<int>("MakerId")
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int");

                    b.Property<string>("LangId")
                        .HasColumnName("LANG_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<string>("ProductNameLang")
                        .HasColumnName("PRODUCT_NAME_LANG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId", "MakerId", "LangId");

                    b.ToTable("CAR_PRODUCT_LANG");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProductModel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MODEL_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<int>("MakerId")
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int");

                    b.Property<string>("ModelYear")
                        .HasColumnName("MODEL_YEAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnName("PRODUCT_ID")
                        .HasColumnType("int");

                    b.Property<string>("ProductModelName")
                        .HasColumnName("PRODUCT_MODEL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelId");

                    b.HasIndex("ProductId", "MakerId");

                    b.ToTable("CAR_PRODUCT_MODEL");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarSalesYear", b =>
                {
                    b.Property<int>("CarSalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CAR_SALES_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("CREATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUser")
                        .HasColumnName("CREATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ExclusiveKey")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("EX_STAMP")
                        .HasColumnType("rowversion");

                    b.Property<int>("MakerId")
                        .HasColumnName("MAKER_ID")
                        .HasColumnType("int");

                    b.Property<string>("SalesVolume")
                        .HasColumnName("SALES_VOLUME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetYear")
                        .HasColumnName("TARGET_YEAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnName("UPDATE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateUser")
                        .HasColumnName("UPDATE_USER")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarSalesId");

                    b.HasIndex("MakerId");

                    b.ToTable("CAR_SALES_YEAR");
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarMakerLang", b =>
                {
                    b.HasOne("CarProductServiceModel.Models.CarMaker", "CarMaker")
                        .WithMany("CarMakerLangs")
                        .HasForeignKey("MakerId")
                        .HasConstraintName("FK_CAR_MAKER_LANG_CAR_MAKER")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProduct", b =>
                {
                    b.HasOne("CarProductServiceModel.Models.CarMaker", "CarMaker")
                        .WithMany("CarProducts")
                        .HasForeignKey("MakerId")
                        .HasConstraintName("FK_CAR_PRODUCT_CAR_MAKER")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProductLang", b =>
                {
                    b.HasOne("CarProductServiceModel.Models.CarProduct", "CarProduct")
                        .WithMany("CarProductLangs")
                        .HasForeignKey("ProductId", "MakerId")
                        .HasConstraintName("FK_CAR_PRODUCT_LANG_CAR_PRODUCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarProductModel", b =>
                {
                    b.HasOne("CarProductServiceModel.Models.CarProduct", "CarProduct")
                        .WithMany("CarProductModels")
                        .HasForeignKey("ProductId", "MakerId")
                        .HasConstraintName("FK_CAR_PRODUCT_MODEL_CAR_PRODUCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarProductServiceModel.Models.CarSalesYear", b =>
                {
                    b.HasOne("CarProductServiceModel.Models.CarMaker", "CarMaker")
                        .WithMany("CarSalesYears")
                        .HasForeignKey("MakerId")
                        .HasConstraintName("FK_CAR_SALES_YEAR_CAR_MAKER")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
